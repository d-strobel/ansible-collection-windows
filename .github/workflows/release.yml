name: Release and Deploy collection
on: # yamllint disable-line rule:truthy
  workflow_dispatch:

jobs:
  releaseanddeploy:
    runs-on: ubuntu-latest
    if: github.repository == 'd-strobel/ansible-collection-windows'
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release version
        id: version
        run: |
          RELEASE=$(grep version galaxy.yml | awk -F'"' '{ print $2 }')
          echo "Release version: $RELEASE"
          echo "release=$RELEASE" >> "$GITHUB_OUTPUT"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade ansible

      - name: Copy files and directories to source
        run: |
          mkdir -p build/src
          cp $files build/src
          cp -rf $directories build/src
        env:
          files: "README.md LICENSE ansible.cfg galaxy.yml"
          directories: "inventories playbooks roles vars"

      - name: Build Ansible Collection
        run: ansible-galaxy collection build build/src --force

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.release }}
          release_name: v${{ steps.version.outputs.release }}
          body: |
            # ${{ steps.version.outputs.release }}

            Install with:
            ansible-galaxy collection install -r requirements.yml -f
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: d_strobel.windows-${{ steps.version.outputs.release }}.tar.gz
          asset_name: d_strobel.windows-${{ steps.version.outputs.release }}.tar.gz
          asset_content_type: application/tar+gzip

      - name: Deploy Ansible collection to Galaxy
        run: ansible-galaxy collection publish d_strobel.windows-${{ steps.version.outputs.release }}.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
